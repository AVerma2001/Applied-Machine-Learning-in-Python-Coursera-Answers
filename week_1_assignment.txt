Coursera answers
-------------------------------------------------
week 1 assignment ----------------------

Question 0 (Example)
# You should write your whole answer within the function provided. The autograder will call
# this function and compare the return value against the correct solution value
def answer_zero():
    # This function returns the number of features of the breast cancer dataset, which is an integer. 
    # The assignment question description will tell you the general format the autograder is expecting
    
    # YOUR CODE HERE
    return len(cancer['feature_names'])
    raise NotImplementedError()

# You can examine what your function returns by calling it in the cell. If you have questions
# about the assignment formats, check out the discussion forums for any FAQs
answer_zero() 

Question 1
def answer_one():
    # YOUR CODE HERE
    return pd.DataFrame(data=np.c_[cancer.data, cancer.target], columns=list(cancer.feature_names) + ['target'])
    raise NotImplementedError()

Question 2
def answer_two():
    
    # YOUR CODE HERE
    cancerdf = answer_one()
    df = cancerdf['target'].value_counts()
    df.index = ['benign', 'malignant']
    return df
    raise NotImplementedError()

Question 3
def answer_three():
    # YOUR CODE HERE
    cancerdf = answer_one()
    X = cancerdf.iloc[:, 0:30]
    y = cancerdf['target']
    return X, y
    raise NotImplementedError()

Question 4
from sklearn.model_selection import train_test_split

def answer_four():
    # YOUR CODE HERE
    X, y = answer_three()
    X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)
    return X_train, X_test, y_train, y_test
    raise NotImplementedError()

Question 5
from sklearn.neighbors import KNeighborsClassifier

def answer_five():
    # YOUR CODE HERE
    X_train, X_test, y_train, y_test = answer_four()
    knn = KNeighborsClassifier(n_neighbors = 1)
    knn.fit(X_train, y_train)
    return knn
    raise NotImplementedError()

Question 6
def answer_six():
    # YOUR CODE HERE
    cancerdf = answer_one()
    means = cancerdf.mean()[:-1].values.reshape(1, -1)
    knn = answer_five()
    return knn.predict(means)
    raise NotImplementedError()

Question 7

def answer_seven():
    # YOUR CODE HERE
    X_train, X_test, y_train, y_test = answer_four()
    knn = answer_five()
    return knn.predict(X_test)
    raise NotImplementedError()

Question 8
def answer_eight():
    # YOUR CODE HERE
    X_train, X_test, y_train, y_test = answer_four()
    knn = answer_five()
    return knn.score(X_test, y_test)
    raise NotImplementedError()